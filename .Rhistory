<<<<<<< HEAD
=======
# fill vector
#loop over all rows (i) and columns (j)
>>>>>>> 1c1c046300489bd08f15c646e6fddee22a7d6094
for(i in 1:nrow(races_vars)){
for (j in 1:ncol(races_vars)){
if (races_vars[i,j] == 1){
race[i] <- j
break
}
}
}
# add correct labels for other variables (pretty sure these are correct, maybe someone can double check)
race_labels <- c( "native", "asian", "black", "hispanic", "white", "no_answer", "other")
# New variable for race with labels
race_lab <- c()
# corresponding element of "race_labels" substitute the number (if 3 then "black")
for (i in 1:length(race))
{
race_lab[i] <- race_labels[race[i]]
}
# identified participants who chose more than 1 option (mixed race) and substitute with mixed in "race" vector
# NOTE: mixed participants can be identified by checking whether a row sum is higher than 1
race_lab[which(rowSums(races_vars) > 1)] <- "mixed"
race[which(rowSums(races_vars) > 1)] <- "mixed"
# race for Health History data with labels
table(race_lab)
sum(is.na(race_lab))
#Label BSIT race
race_labels <- c( "native", "asian", "black", "hispanic", "pi", "white", "no_answer", "other")
BSIT_race <- c()
# corresponding element of "race_labels" substitute the number (if 3 then "black")
for (i in 1:nrow(d_BSIT))
{
#6th column is race in BSIT data
BSIT_race[i] <- race_labels[d_BSIT[i, 6]]
}
table(BSIT_race)
# now merge insert the first 44 elements of BSIT_race into race
race_lab[1:44] <- BSIT_race[1:44]
# not missing and table
sum(is.na(race_lab) == FALSE)
table(race_lab)
sex <- coalesce(d_hist$sex, d_BSIT$sex..1...M..2...F.)
sex <- recode_factor(sex, `1` = "male",
`2` = "female",
`4` = "no_answer")
table(sex)
rowSums(d_hist[39:44])
which(rowSums(d_hist[39:44]) >2 )
which(rowSums(d_hist[39:44]) >= 2)
repiratory_illness <- d_hist[39:44])
repiratory_illness <- d_hist[39:44]
resp_illness <- c()
respiratory_illness <- d_hist[39:44]
for(i in 1:nrow(respiratory_illness)){
for (j in 1:ncol(respiratory_illness)){
if (respiratory_illness[i,j] == 1){
resp_illness[i] <- j
break
}
}
}
resp_illness
table(resp_illness)
resp_illness <- recode_factor(resp_illness,
`1` = "strep_throat",
`2` = "another_bacterial_illness",
`3` = "flu",
`4` = "another_viral_illness",
`5` = "other",
`6` = "none")
table(resp_illness)
resp_illness[112]
resp_illness[112] <- "flu_other_viral_illness"
#make sure that no one has more than 1 reported respiratory illness (column 39 to 44)
which(rowSums(d_hist[39:44]) >= 2)
# only ID 112 checked more than one category
respiratory_illness <- d_hist[39:44]
# same method as "race"
resp_illness <- c()
for(i in 1:nrow(respiratory_illness)){
for (j in 1:ncol(respiratory_illness)){
if (respiratory_illness[i,j] == 1){
resp_illness[i] <- j
break
}
}
}
resp_illness[112] <- "flu_other_viral_illness"
resp_illness <- recode_factor(resp_illness,
`1` = "strep_throat",
`2` = "another_bacterial_illness",
`3` = "flu",
`4` = "another_viral_illness",
`5` = "other",
`6` = "none")
table(resp_illness)
# ID 112 reported 3 and 4.
which(rowSums(d_hist[,39:44]) >= 2)
#make sure that no one has more than 1 reported respiratory illness (column 39 to 44)
which(rowSums(d_hist[,39:44]) >= 2)
# only ID 112 checked more than one category
respiratory_illness <- d_hist[,39:44]
# same method as "race"
resp_illness <- c()
for(i in 1:nrow(respiratory_illness)){
for (j in 1:ncol(respiratory_illness)){
if (respiratory_illness[i,j] == 1){
resp_illness[i] <- j
break
}
}
}
# ID 112 reported 3 and 4.
resp_illness[112] <- "flu_other_viral_illness"
# label responses
resp_illness <- recode_factor(resp_illness,
`1` = "strep_throat",
`2` = "another_bacterial_illness",
`3` = "flu",
`4` = "another_viral_illness",
`5` = "other",
`6` = "none")
table(resp_illness)
d_hist[,48:50]
rowSums(d_hist[,48:50])
# column 48 to 52
smell_disorders <- d_hist[,48:52]
rowSums(smell_disorders)
which(rowSums(smell_disorders)>=2)
for(i in 1:nrow(smell_disorders)){
for (j in 1:ncol(smell_disorders)){
if (smell_disorders[i,j] == 1){
smell_dis[i] <- j
break
}
else{
0
}
}
}
smell_dis <- c()
for(i in 1:nrow(smell_disorders)){
for (j in 1:ncol(smell_disorders)){
if (smell_disorders[i,j] == 1){
smell_dis[i] <- j
break
}
else{
0
}
}
}
smell_dis
smell_dis <- c()
for(i in 1:nrow(smell_disorders)){
for (j in 1:ncol(smell_disorders)){
if (smell_disorders[i,j] == 1){
smell_dis[i] <- j
}
else{
0
}
}
}
smell_dis
smell_dis <- c()
for(i in 1:nrow(smell_disorders)){
for (j in 1:ncol(smell_disorders)){
if (smell_disorders[i,j] == 1){
smell_dis[i] <- j
break
}
else{
smell_dis[i] <- 0
}
}
}
smell_dis
smell_dis[c(84,150)]
#  identify who reported more than 2 smell disorders (ID 84 and 150)
which(rowSums(smell_disorders) >= 2 )
smell_disorders[c(84,150),]
# column 48 to 52
smell_disorders <- d_hist[,48:52]
#  identify who reported more than 2 smell disorders (ID 84 and 150)
which(rowSums(smell_disorders) >= 2 )
smell_dis <- c()
for(i in 1:nrow(smell_disorders)){
for (j in 1:ncol(smell_disorders)){
if (smell_disorders[i,j] == 1){
smell_dis[i] <- j
break
}
# if only 0s (none), substitute with 0
else{
smell_dis[i] <- 0
}
}
}
# fill in participants who reported more than 1
smell_disorders[c(84,150),]
smell_dis[c(84,150)] <- c("hyposmia_other", "anosmia_other")
smell_dis <- recode_factor(smell_dis,
`0` = "none",
`1` = "anosmia",
`2` = "hyposmia",
`3` = "parosmia",
`4` = "fluctuations"
`5` = "other")
# column 48 to 52
smell_disorders <- d_hist[,48:52]
#  identify who reported more than 2 smell disorders (ID 84 and 150)
which(rowSums(smell_disorders) >= 2 )
smell_dis <- c()
for(i in 1:nrow(smell_disorders)){
for (j in 1:ncol(smell_disorders)){
if (smell_disorders[i,j] == 1){
smell_dis[i] <- j
break
}
# if only 0s (none), substitute with 0
else{
smell_dis[i] <- 0
}
}
}
# fill in participants who reported more than 1
smell_disorders[c(84,150),]
smell_dis[c(84,150)] <- c("hyposmia_other", "anosmia_other")
smell_dis <- recode_factor(smell_dis,
`0` = "none",
`1` = "anosmia",
`2` = "hyposmia",
`3` = "parosmia",
`4` = "fluctuations",
`5` = "other")
table(smell_dis)
# column 48 to 52
smell_disorders <- d_hist[,48:52]
#  identify who reported more than 2 smell disorders (ID 84 and 150)
which(rowSums(smell_disorders) >= 2 )
smell_dis <- c()
for(i in 1:nrow(smell_disorders)){
for (j in 1:ncol(smell_disorders)){
if (smell_disorders[i,j] == 1){
smell_dis[i] <- j
break
}
# if only 0s (none), substitute with 0
else{
smell_dis[i] <- 0
}
}
}
# fill in participants who reported more than 1
smell_dis[c(84,150)] <- c("hyposmia_other", "anosmia_other")
# add labels
smell_dis <- recode_factor(smell_dis,
`0` = "none",
`1` = "anosmia",
`2` = "hyposmia",
`3` = "parosmia",
`4` = "fluctuations",
`5` = "other")
table(smell_dis)
# column 48 to 52
smell_disorders <- d_hist[,48:52]
#  identify who reported more than 2 smell disorders (ID 84 and 150)
which(rowSums(smell_disorders) >= 2 )
# create single vector
smell_disorder <- c()
for(i in 1:nrow(smell_disorders)){
for (j in 1:ncol(smell_disorders)){
if (smell_disorders[i,j] == 1){
smell_disorder[i] <- j
break
}
# if only 0s (none), substitute with 0
else{
smell_disorder[i] <- 0
}
}
}
# fill in participants who reported more than 1
smell_disorder[c(84,150)] <- c("hyposmia_other", "anosmia_other")
# add labels
smell_disorder <- recode_factor(smell_disorder,
`0` = "none",
`1` = "anosmia",
`2` = "hyposmia",
`3` = "parosmia",
`4` = "fluctuations",
`5` = "other")
table(smell_disorder)
library(usefun)
library(usefun)
devtools::load_all(".")
stukel.2PL()
library(usefun)
library(usefun)
stukel.2PL(1, 1, 0, 0, 0)
detach("package:usefun", unload = TRUE)
library(usefun)
library(usefun)
irf_4PL <- function(theta, a = 1, b = 0, c = 0, d = )
irf_4PL <- function(theta, a = 1, b = 0, c = 0, d = 1)
{
(c + (d-c)*(exp(a * (theta - b))/ (1 + exp(a * (theta - b)))))
}
irf_4PL(1)
irf_4PL(1, 2, 1)
irf_4PL(1, 0, 1)
irf_4PL(1, 0, 2)
irf_4PL(1, 1, 2)
irf_4pl()
irf_4pl(1)
irf_4PL(1)
irf_4PL(1, 1, 2)
irf_4PL(1)
library(usefun)
library(usefun)
irf_stukel.2PL(2)
detach("package:usefun", unload = TRUE)
library(usefun)
library(usefun)
library(usefun)
library(usefun)
library(usefun)
library(dplyr, quietly = TRUE)
two_answers4 <- read.csv("two_answers4.csv")
two_answers9 <- read.csv("two_answers9.csv")
names(two_answers4)
multiple_4_items <- two_answers4 %>%
filter(odor_ident_flower == "TWO ANSWERS" |
odor_ident_coffee == "TWO ANSWERS" |
odor_ident_bubblegum == "TWO ANSWERS" |
odor_ident_popcorn == "TWO ANSWERS" )
two_4 <- list()
for (i in 1:nrow(multiple_4_items)){
two_4[[i]] <- which(is.na(multiple_4_items[i,]) == FALSE)[-c(1:5)]
}
View(two_4)
x <- c()
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
x <- append(x, colnames(two_answers4)[two_4[[i]][j]])
}
}
x <- c()
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
x <- append(x, colnames(two_answers4)[two_4[[i]][j]])
}
}
x
#two_4[[i]][j] <- x[(i+j)-1]
print(x[(i+j)-1])
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
#two_4[[i]][j] <- x[(i+j)-1]
print(x[(i+j)-1])
}
}
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
#two_4[[i]][j] <- x[(i+j)-1]
print(x[(i+j)])
}
}
x
x[-1]
x[-1:5]
x[-c(1:5)]
multiple_4_items <- two_answers4 %>%
filter(odor_ident_flower == "TWO ANSWERS" |
odor_ident_coffee == "TWO ANSWERS" |
odor_ident_bubblegum == "TWO ANSWERS" |
odor_ident_popcorn == "TWO ANSWERS" )
two_4 <- list()
for (i in 1:nrow(multiple_4_items)){
two_4[[i]] <- which(is.na(multiple_4_items[i,]) == FALSE)[-c(1:5)]
}
#name list entry
names(two_4) <- multiple_4_items$id
#two_4[[1]] <-
# get variables with answers
x <- c()
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
x <- append(x, colnames(two_answers4)[two_4[[i]][j]])
}
}
# I don't know, looks silly but it works
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
two_4[[i]][j] <- x[(j)]
}
x <- x[-c(1:length(two_4[[i]]))]
}
View(two_4)
x
two_4[["57"]]
two_4[["59"]]
two_4[["94"]]
multiple_4_items <- two_answers4 %>%
filter(odor_ident_flower == "TWO ANSWERS" |
odor_ident_coffee == "TWO ANSWERS" |
odor_ident_bubblegum == "TWO ANSWERS" |
odor_ident_popcorn == "TWO ANSWERS" )
two_4 <- list()
for (i in 1:nrow(multiple_4_items)){
two_4[[i]] <- which(is.na(multiple_4_items[i,]) == FALSE)[-c(1:5)]
}
#name list entry
names(two_4) <- multiple_4_items$id
#two_4[[1]] <-
# get variables with answers
x <- c()
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
x <- append(x, colnames(two_answers4)[two_4[[i]][j]])
}
}
# I don't know, looks silly but it works
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
two_4[[i]][j] <- x[(j)]
}
x <- x[-c(1:length(two_4[[i]]))]
}
#length(two_4)
# save lsit
capture.output(two_4, file = "two_4.csv")
multiple_4_items <- two_answers4 %>%
filter(odor_ident_flower == "TWO ANSWERS" |
odor_ident_coffee == "TWO ANSWERS" |
odor_ident_bubblegum == "TWO ANSWERS" |
odor_ident_popcorn == "TWO ANSWERS" )
two_4 <- list()
for (i in 1:nrow(multiple_4_items)){
two_4[[i]] <- which(is.na(multiple_4_items[i,]) == FALSE)[-c(1:5)]
}
#name list entry
names(two_4) <- multiple_4_items$id
#two_4[[1]] <-
# get variables with answers
x <- c()
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
x <- append(x, colnames(two_answers4)[two_4[[i]][j]])
}
}
# I don't know, looks silly but it works
for (i in 1:length(two_4)){
for (j in 1:length(two_4[[i]]))
{
two_4[[i]][j] <- x[j]
}
x <- x[-c(1:length(two_4[[i]]))]
}
#length(two_4)
# save lsit
capture.output(two_4, file = "two_4.csv")
multiple_9_items <- two_answers9 %>%
filter(odor_ident_flower9 == "TWO ANSWERS"|
odor_ident_bubblegum9 == "TWO ANSWERS"|
odor_ident_orange == "TWO ANSWERS"|
odor_ident_coffee9 == "TWO ANSWERS"|
odor_ident_banana == "TWO ANSWERS"|
odor_ident_strawberry == "TWO ANSWERS"|
odor_ident_coconut == "TWO ANSWERS"|
odor_ident_smoke == "TWO ANSWERS"|
odor_ident_lemon == "TWO ANSWERS")
two_9 <- list()
for (i in 1:nrow(multiple_9_items)){
two_9[[i]] <- which(is.na(multiple_9_items[i,]) == FALSE)[-c(1:10)]
}
#name list entry
names(two_9) <- multiple_9_items[,1]
# variables
x <- c()
for (i in 1:length(two_9)){
for (j in 1:length(two_9[[i]]))
{
x <- append(x, colnames(two_answers9)[two_9[[i]][j]])
#two_4[[i]][j] <- x
}
}
# I don't know, looks silly but it works
for (i in 1:length(two_9)){
for (j in 1:length(two_9[[i]]))
{
two_9[[i]][j] <- x[j]
}
x <- x[-c(1:length(two_9[[i]]))]
}
capture.output(two_9, file = "two_9.csv")
View(two_9)
two_9[["147"]]
two_9[["224"]]
install.packages("blogdown")
blogdown::install_hugo()
blogdown::hugo_version()
<<<<<<< HEAD
git branch -d "main"
git branch -d main
=======
>>>>>>> 1c1c046300489bd08f15c646e6fddee22a7d6094
